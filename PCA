import numpy as np
X=np.array([[-1,-1,0,2,0],           #原始矩阵X                     
            [-2, 0,0,1,1],
            [ 4, 6,3,7,1]]
            )
k=2                           #目的降至k维向量
x=np.ones(X.shape)              #零均值化                         
for i in range(0,(X.shape[0])):
    for j in range(0,(X.shape[1])):
        x[i,j]=X[i,j]-np.mean(X[i])      
C=(x.dot(x.T))/x.shape[1]       #求出x的协方差矩阵C
print('实对称矩阵为')
print(C)
eig,eigv=np.linalg.eig(C)
print('特征值为')
print(eig)
print('特征向量为')
print(eigv)                     #求出C的特征值和特征向量
E=np.vstack((eigv,eig))       #排序选择前k个最大的特征向量
a=((E.T[np.lexsort(np.vstack(E))].T).T)
P=a[(E.shape[0]-k-1):(E.shape[0]),0:(E.shape[1])]
print('投影矩阵P为')
print(P)
Y=P.dot(X)
print('降到k维后的数据为')
print(Y)
